{
    "title": "SQLite",
    "icon": "devicon-sqlite-plain colored",
    "experience": 60,
    "overview": "SQLite provides a lightweight, serverless database solution that I use extensively for embedded applications, mobile apps, and desktop software.",
    "usage": "I leverage SQLite for applications that need reliable local data storage without the overhead of a client-server database system. It's been particularly useful for game development and offline-capable applications.",
    "projects": [
        "Edventure Trek",
        "Local Analytics Cache",
        "Offline-First Mobile App"
    ],
    "insight": "<p>SQLite's unique file-based architecture makes it perfect for certain use cases that other databases can't easily address:</p><ul><li>Zero-configuration deployment - the database is just a file</li><li>Cross-platform compatibility with the same database file</li><li>Excellent performance for read-heavy workloads</li></ul><p>For Edventure Trek, I implemented a local-first data architecture using SQLite:</p><div class=\"code-example\">// C# code for SQLite implementation in Unity\npublic class DatabaseManager {\n    private SQLiteConnection _connection;\n\n    public void Initialize() {\n        string dbPath = Path.Combine(Application.persistentDataPath, \"game_data.db\");\n        _connection = new SQLiteConnection(dbPath, SQLiteOpenFlags.ReadWrite | SQLiteOpenFlags.Create);\n\n        _connection.Execute(@\"\n            CREATE TABLE IF NOT EXISTS PlayerProgress (\n                LevelId TEXT PRIMARY KEY,\n                CompletionDate TEXT,\n                Score INTEGER,\n                TimeSpent INTEGER,\n                Attempts INTEGER\n            )\n        \");\n    }\n\n    public async Task SyncWithCloud() {\n        if (IsConnected()) {\n            var localData = GetUnsyncedData();\n            await _apiClient.SyncPlayerProgress(localData);\n            MarkDataSynced(localData);\n        }\n    }\n}</div><p>This approach allowed players to continue playing and making progress even when offline, with data syncing to our cloud database when connectivity was restored.</p>"
}